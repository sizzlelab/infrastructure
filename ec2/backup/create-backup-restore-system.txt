# make sure ec2-api-tools are installed

# as cos user:
mkdir ~/.aws
chmod 700 .aws

# scp X509 certificate and private key to server
scp .aws/cert-ATW57ZBEHKPMQNTZNWTF7XORQPREVTCE.pem cos@46.137.99.187:/home/cos/.aws
scp .aws/pk-ATW57ZBEHKPMQNTZNWTF7XORQPREVTCE.pem cos@46.137.99.187:/home/cos/.aws

# set needed env in .profile 
----
# Set up the necessary environment for ec2 tools to work
# source this file into your current shell
#
# see: http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/

# JAVA
export JAVA_HOME=/usr/lib/jvm/java-6-openjdk/

# EC2 access credentials
export EC2_PRIVATE_KEY=~/.aws/pk-ATW57ZBEHKPMQNTZNWTF7XORQPREVTCE.pem
export EC2_CERT=~/.aws/cert-ATW57ZBEHKPMQNTZNWTF7XORQPREVTCE.pem

# set the european endpoint
export EC2_URL=https://ec2.eu-west-1.amazonaws.com
----


# create a local mysql user for making backups
CREATE USER 'snapshot'@'localhost' IDENTIFIED BY 'some_pass';
GRANT ALL PRIVILEGES ON *.* TO 'snapshot'@'localhost';

# create mysql credentials file
mkdir ~/.mysql
chmod 700 !$
vi ~/.mysql/ec2-snapshot-mysql
--
[client]
host=localhost
user=snapshot
password=some_pass
---
chmod 600 !$

# example invocation
sudo ec2-consistent-snapshot --aws-credentials-file ~/.aws/sizl-aws@hiit.fi --region eu-west-1 --freeze-filesystem /data --mysql --mysql-defaults-file ~/.mysql/ec2-snapshot-mysql.cnf vol-f0109d99

# install cron job for daily backup under cos user
# Note 23:10 UTC is chosen as it would be approx 16:10 on US west coast 
crontab -e
---
MAILTO="konker@gmail.com"

# daily backup
23 10 * * * /home/cos/bin/daily-backup.sh
---


# restore
restore.py -h

Usage: restore.py [options]

Options:
  -h, --help            show this help message and exit
  -p RESTORE_PERIOD, --restore-period=RESTORE_PERIOD
                        Which backup to restore to, e.g. "Mon", "Tue",
                        "Weekly1", etc
  -t INSTANCE_TYPE, --instance-type=INSTANCE_TYPE
                        EC2 instance type for the restored instance, e.g.
                        "c1.medium"
  -i IP_ADDRESS, --ip-address=IP_ADDRESS
                        IP address which will be associated with the new
                        instance. Probably the elastic IP address of the
                        failed instance.

      
This will:
    - create an AMI from the sys snapshot
    - start an instance of type INSTANCE_TYPE using this ami
    - create a new volume from the dat snapshot
    - attach this new volume to the new instance as /dev/sdh
    - associate IP_ADDRESS with the new instance

It is left as a manual task to the sysadmin to terminate/delete uneeded resources after this has completed, or in the case that the restore fails or is aborted.
